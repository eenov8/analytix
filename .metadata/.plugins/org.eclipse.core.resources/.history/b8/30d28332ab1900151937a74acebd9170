package bigdata.datascraper.flipkart;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import com.mongodb.BasicDBObject;
import com.mongodb.BasicDBObjectBuilder;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.Mongo;
import com.mongodb.MongoException;
import com.mongodb.util.JSON;

public class TestFlipkart {
	public static void main(String[] args) throws Exception {
        
		Mongo mongo = new Mongo("localhost", 27017);
		DB db = mongo.getDB("analytix_products");


		// Instantiate the full fledged FF selenium webdriver object. 
        WebDriver driver = new FirefoxDriver();
        
        // Load up the Flipkart's home page.
        driver.get("http://www.flipkart.com");
        
        // Enter the query string "whatever", 
        // this will soon be replaced with strings added 
        // in a csv file
        WebElement query = driver.findElement(By.id("fk-top-search-box"));
        //Send search query to the top search bar.
        query.sendKeys("nokia lumia");
        
        //Submit the search form now.
        driver.findElement(By.id("fk-header-search-form")).submit();
        
        //Temporary Link -
        driver.get("http://www.flipkart.com/sports-fitness/fitness-accessories/accessories/yoga-straps/pr?sid=dep%2Cxnh%2Ccsz%2Cznc&filterNone=true&q=yoga+mat");
        
        //On the resulting page, load up all the elements with class as pu-title
        List<WebElement> lstProducts = driver.findElements(By.className("pu-title"));
        for (WebElement webElement : lstProducts) {        	
        	//Not interested in the title from this page, the product link will be fetched and opened individually for complete details.
        	WebElement aLink = webElement.findElement(By.xpath(".//a"));
        	String aHref = aLink.getAttribute("href");
        	
        	//Instantiate a child driver per product in the search page
        	WebDriver driver_prod = new FirefoxDriver();
        	driver_prod.get(aHref);
        	
        	//Fetch Title
        	WebElement productTitle = driver_prod.findElement(By.className("title-wrap"));
            
        	//Might not be needed, has to be cleaned up eventually.
        	//WebElement productPrice = driver.findElement(By.className("selling-price "));
            //WebElement productSeller = driver.findElement(By.className("seller-name"));
            
        	//Since the sellers information is loaded only after clicking the small hyperlink which says load N sellers
        	//Clicking the above link is required to fetch the complete details.
			try {
				WebElement loadNextA = driver_prod.findElement(By
						.className("t-load-next"));
				if (loadNextA != null)
					loadNextA.click();
			} catch (NoSuchElementException ex) {
				System.out.println(ex.toString());
			}
			
            //Seller-wise price information is present in a data table with class name "seller-table"
            //We will be iterating all the rows and corresponding columns to fetch these details.
    		try {
				WebElement htmltable = driver_prod.findElement(By
	    				.xpath("//div[contains(@class, 'seller-table')]/table[1]/tbody"));
	
	    		if(htmltable != null){
		    		List<WebElement> rows = htmltable.findElements(By.tagName("tr"));
		
		    		for (int rnum = 0; rnum < rows.size(); rnum++)
		    		{
		    			List<WebElement> columns = rows.get(rnum).findElements(
		    					By.tagName("td"));
		    			System.out.println("Number of columns:" + columns.size());
		    			for (int cnum = 0; cnum < columns.size(); cnum++)
		    			{
		    				//This is the point where the data has to go into a JSON object that can be later on persisted into the MongoDB.
		    				System.out.println(columns.get(cnum).getText());
		    			}
		    		}
	    		}
    		} catch(NoSuchElementException ex) {
    			System.out.println(ex.toString());
    		}
    		
            System.out.println(productTitle.getText());
        	
        	driver_prod.quit();
 		}
        driver.quit();
    }
}
